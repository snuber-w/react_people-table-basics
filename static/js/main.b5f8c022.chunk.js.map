{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","MOTHER","getParentLink","args","person","parentType","name","peopleList","isMother","parent","find","personToFind","classNames","to","slug","motherName","fatherName","PersonLink","people","useParams","isFemale","sex","born","died","tableHeads","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useEffect","loadPeople","isErrorMessageVisible","isPeopleTableVisible","length","map","head","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b5f8c022.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams, Link } from 'react-router-dom';\nimport { Person } from '../types';\n\nconst FATHER = 'father';\nconst MOTHER = 'mother';\nconst FEMALE = 'f';\nconst NOT_SET_VALUE = '-';\n\ninterface ParentLink {\n  person: Person,\n  parentType: string,\n  name: string,\n  peopleList: Person[],\n}\n\nconst getParentLink = (\n  args: ParentLink,\n) => {\n  const {\n    person,\n    parentType,\n    name,\n    peopleList,\n  } = args;\n  const isMother = parentType === MOTHER;\n\n  const parent = peopleList\n    .find(personToFind => personToFind.name === name);\n\n  if (parent) {\n    return (\n      <Link\n        className={classNames(\n          { 'has-text-danger': isMother },\n        )}\n        to={`/people/${parent.slug}`}\n      >\n        {isMother\n          ? person.motherName\n          : person.fatherName}\n      </Link>\n    );\n  }\n\n  return `${name}`;\n};\n\ninterface Props {\n  person: Person,\n  people: Person[],\n}\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const { slug } = useParams();\n  const isFemale = person.sex === FEMALE;\n\n  const { sex, born, died } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning':\n          person.slug === slug,\n      })}\n    >\n      <td>\n        <Link\n          className={classNames(\n            { 'has-text-danger': isFemale },\n          )}\n          to={`/people/${person.slug}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {person.motherName\n          ? (\n            getParentLink({\n              person,\n              parentType: MOTHER,\n              name: person.motherName,\n              peopleList: people,\n            })\n          )\n          : (NOT_SET_VALUE)}\n      </td>\n      <td>\n        {person.fatherName\n          ? (\n            getParentLink({\n              person,\n              parentType: FATHER,\n              name: person.fatherName,\n              peopleList: people,\n            })\n          )\n          : (NOT_SET_VALUE)}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PersonLink';\n\nconst tableHeads = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\nexport const PeoplePage: React.FC<{}> = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        setPeople(await getPeople());\n      } catch (err) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  const isErrorMessageVisible = !isLoading && error;\n  const isPeopleTableVisible = !isLoading && !error && people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {isLoading && <Loader />}\n\n      {isErrorMessageVisible\n        && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n      {isPeopleTableVisible\n        && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                {tableHeads.map(head => (\n                  <th key={head}>{head}</th>\n                ))}\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => (\n                <PersonLink\n                  person={person}\n                  people={people}\n                  key={person.slug}\n                />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={\n              ({ isActive }) => classNames('navbar-item',\n                {\n                  'has-background-grey-lighter': isActive,\n                })\n            }\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={\n              ({ isActive }) => classNames('navbar-item',\n                {\n                  'has-background-grey-lighter': isActive,\n                })\n            }\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          />\n          <Route\n            path=\"/people/:slug\"\n            element={<PeoplePage />}\n          />\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}